1. [What?验证码用在什么地方?怎么出现的](#what)
2. [Why?为什么需要验证码识别](#why)
3. [常见图片验证码展示](#show)
4. [How?怎么识别这些验证码](#how)

## 1. What?验证码用在什么地方?怎么出现的 {#what}

很多时候，我们自己并不去生产原创的数据(已经有很多人在做了)，我们所要创造的就是将数据进行筛选分类然后展示给我们的用户，提升他们的体验。

当我们的用户是财经新闻爱好者时，我们的产品为他提供各个大型财经网站上的新闻；当他们是快递查询者时，我们为他们提供各个品牌单号、网点等信息的查询；当他们是想购买汽车票时，我们为他们提供各家汽车公司的汽车票信息...

验证码的出现是一些网站防止我们抓取他们的数据，因为别人用了我们的产品，他们的流量就减少了啊...

## 2. Why?为什么需要验证码识别 {#why}
这个时候，验证码识别就显得特别重要了。他不能阻挡我们为用户和社会节省时间成本，满足用户需求。也为了我们能够发展自己的产品，创造收益。

## 3. 一些常见的验证码 {#show}
<!--
![德邦验证码](https://www.deppon.com/user/authCode.action?type=track)

![EMS验证码](http://www.ems.com.cn/ems/rand)

![顺丰验证码](https://i.sf-express.com/service/user/verifycode)

![宅急送验证码](http://www.zjs.com.cn/captcha.svl)

![名航快递验证码](http://www.cae.com.cn/webfunction/expressquery/ExpressQueryCode.aspx)

![快捷速递验证码](http://www.fastexpress.com.cn/randCodeImage)
-->

![image]({{ site.baseurl }}/images/verifycode.png)

## 4. How?怎么识别这些验证码 {#how}
验证码怎么识别呢?我们先从没有干扰背景的验证码说起。

### 图片二值化
我们知道图片是由像素组成的，图片的大小(即宽度与高度)就是指图片横向与纵向所包含的像素点个数。像素中包含了颜色信息，即颜色基本色红绿蓝各个通道的值(0-255)。

对图片进行二值化就是将图片的每个像素表示成0或者1。就比如上面这张验证码图片，白色为底，黑色为文字，我们将白色表示为0，黑色表示为1.

下面是使用php程序对图片进行二值化：

```php
<?php
class ImageRecognize
{
    public static function binary($im)
    {
        // im是获取的图片资源
        $imgW = imagesx($im);
        $imgH = imagesy($im);

        $binaryDots = []; // 保存所有像素二值化后的值 0或1组成的二维数组
        // 遍历所有像素点
        for ($h = 0; $h < $imgH; $h++) {
            $binaryDots[$h] = []; // 初始化一行像素空间
            for ($w = 0; $w < $imgW; $w++) {
                $colorindex = imagecolorat($im, $w, $h); // 获取当前像素的颜色索引值
                $colors = imagecolorsforindex($im, $colorindex); // 包含颜色信息
                // 筛选颜色，返回0或1
                $binaryDots[$h][] = self::filterColor($colors);
            }
        }
        return $binaryDots;
    }
}
```